untyped

global function ClassicMP_DefaultNoIntro_Setup
global function ClassicMP_DefaultNoIntro_GetLength

global const float NOINTRO_LENGTH = 5.0

void function ClassicMP_DefaultNoIntro_Setup()
{
	AddCallback_OnClientConnected( ClassicMP_DefaultNoIntro_SpawnPlayer )
	AddCallback_GameStateEnter( eGameState.Prematch, ClassicMP_DefaultNoIntro_Start )
}

float function ClassicMP_DefaultNoIntro_GetLength()
{
	return NOINTRO_LENGTH
}

void function ClassicMP_DefaultNoIntro_Start()
{
	ClassicMP_OnIntroStarted()

	foreach ( entity player in GetPlayerArray() )
		ClassicMP_DefaultNoIntro_SpawnPlayer( player )
		
	while ( Time() < expect float( level.nv.gameStartTime ) )
		WaitFrame()
		
	foreach ( entity player in GetPlayerArray() )
	{
		if ( !IsPrivateMatchSpectator( player ) )
		{
			player.UnfreezeControlsOnServer()
			RemoveCinematicFlag( player, CE_FLAG_CLASSIC_MP_SPAWNING )
		}
	}
	
	ClassicMP_OnIntroFinished()
}

void function ClassicMP_DefaultNoIntro_SpawnPlayer( entity player )
{
	if ( GetGameState() != eGameState.Prematch )
		return

	if ( ShouldIntroSpawnAsTitan() )
		thread ClassicMP_DefaultNoIntro_TitanSpawnPlayer( player )
	else
		thread ClassicMP_DefaultNoIntro_PilotSpawnPlayer( player )
}


// spawn as pilot for intro
void function ClassicMP_DefaultNoIntro_PilotSpawnPlayer( entity player )
{
	if( PlayerCanSpawn( player ) )
		RespawnAsPilot( player )
	
	player.FreezeControlsOnServer()
	HolsterAndDisableWeapons( player )
	ResetPlayerCooldowns( player ) // Prevention of case they used abilities or grenades near round end
	WaitFrame()
	AddCinematicFlag( player, CE_FLAG_CLASSIC_MP_SPAWNING )
	ScreenFadeFromBlack( player, 1, 1 )

	while ( Time() < expect float( level.nv.gameStartTime ) )
		WaitFrame()
	
	TryGameModeAnnouncement( player )
	DeployAndEnableWeapons( player )
}

// spawn as titan for intro
void function ClassicMP_DefaultNoIntro_TitanSpawnPlayer( entity player )
{
	player.EndSignal( "OnDestroy" )
	WaitFrame()
	ScreenFadeFromBlack( player, 1, 1 )

	entity intermissionCam = GetEntArrayByClass_Expensive( "info_intermission" )[ 0 ]
	player.SetObserverModeStaticPosition( intermissionCam.GetOrigin() )
	player.SetObserverModeStaticAngles( intermissionCam.GetAngles() )
	player.StartObserverMode( OBS_MODE_STATIC_LOCKED )

	while ( Time() < expect float( level.nv.gameStartTime ) ) // Wait until match actually starts to spawn them
		WaitFrame()
	
	if( PlayerCanSpawn( player ) )
	{
		player.StopObserverMode()
		RespawnAsTitan( player )
	}
	
	TryGameModeAnnouncement( player )
}